---
title: "Within_Dataset_Accuracy"
author: "Jacob T. Nearing"
date: "4/20/2020"
output: html_document
---

# Random Forest Prediction on expression array data for response vs resistant to taxol

We have a total of 4 "large" datasets. We will test within dataset accuracy with the curated genelist and then all genes within the expression table.


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(RandomForestUtils)
library(forcats)

#load in expression tables
GSE20194_exp <- read.table("~/projects/Taxol-Mo-Project/Datasets/exp_tables/GSE20194_table.txt", sep="\t", quote="", header=T, row.names = 1)
GSE25055_exp <- read.table("~/projects/Taxol-Mo-Project/Datasets/exp_tables/GSE25055_table.txt", sep="\t", quote="", header=T, row.names = 1)
GSE25065_exp <- read.table("~/projects/Taxol-Mo-Project/Datasets/exp_tables/GSE25065_table.txt", sep="\t", quote="", header=T, row.names = 1)
GSE50948_exp <- read.table("~/projects/Taxol-Mo-Project/Datasets/exp_tables/GSE50948_table.txt", sep="\t", quote="", header=T, row.names = 1)
#flip with all
GSE20194_exp <- data.frame(t(GSE20194_exp))
GSE25055_exp <- data.frame(t(GSE25055_exp))
GSE25065_exp <- data.frame(t(GSE25065_exp))
GSE50948_exp <- data.frame(t(GSE50948_exp))


## load in outcomes list
GSE20194_classes <- read.table("~/projects/Taxol-Mo-Project/Datasets/outcomes/GSE20194_cleaned.txt", sep="\t", quote = "", header=F, row.names=1)
GSE25055_classes <- read.table("~/projects/Taxol-Mo-Project/Datasets/outcomes/GSE25055.txt", sep="\t", quote = "", header=F, row.names=1)
GSE25065_classes <- read.table("~/projects/Taxol-Mo-Project/Datasets/outcomes/GSE25065.txt", sep="\t", quote = "", header=F, row.names=1)
GSE50948_classes <- read.table("~/projects/Taxol-Mo-Project/Datasets/outcomes/GSE50948_outcomes.txt", sep="\t", quote = "", header=F, row.names=1)

## prepare the classes tables
#we will call resistant controls and responding cases

GSE20194_classes$classes <- fct_recode(GSE20194_classes$V2, Case="Responding", Control="Resistant")
table(GSE20194_classes$classes)
table(GSE20194_classes$V2)


GSE25055_classes$classes <- fct_recode(GSE25055_classes$V2, Case="Responding", Control="Resistant")
table(GSE25055_classes$classes)

GSE25065_classes$classes <- fct_recode(GSE25065_classes$V2, Case="Responding", Control="Resistant")
table(GSE25065_classes$classes)

GSE50948_classes$classes <- fct_recode(GSE50948_classes$V2, Case="Responding", Control="Resistant")
table(GSE50948_classes$classes)


## make sure the classes table match with exp table

rownames(GSE20194_classes)
rownames(GSE20194_exp)
identical(rownames(GSE20194_classes), rownames(GSE20194_exp))
# need to subset the table
GSE20194_exp_clean <- GSE20194_exp[rownames(GSE20194_classes),]
identical(rownames(GSE20194_exp_clean), rownames(GSE20194_classes))


identical(rownames(GSE25055_exp), rownames(GSE25055_classes))
identical(rownames(GSE25065_classes), rownames(GSE25065_classes))
identical(rownames(GSE50948_classes), rownames(GSE50948_exp))
## data matches

## set up curated genelist for each dataset
#load in Mo's genelist

Mo_genelist <- read.table("~/projects/Taxol-Mo-Project/Datasets/genelist/mo_genelist_edit.txt", stringsAsFactors = F)

curated_GSE20194 <- GSE20194_exp_clean[,Mo_genelist$V1]
curated_GSE25055 <- GSE25055_exp[,Mo_genelist$V1]
curated_GSE25065 <- GSE25065_exp[,Mo_genelist$V1]
curated_GSE50948 <- GSE50948_exp[,Mo_genelist$V1]

```

## GSE20194 Testing

```{r}

### set up the save_path for the total genelist model
SAVE_PATH <- "~/projects/Taxol-Mo-Project/RF_Results/within_dataset/GSE20194/smote/All_genes/"

#set up the seeds
set.seed(1995)
seeds <- sample.int(10000000, 1000)

#setup number of cores
RandomForestUtils::set_cores(40)

all_genes_GSE20194 <- RandomForestUtils::Run_RF_Pipeline(feature_table = GSE20194_exp_clean,
                                                 classes=GSE20194_classes$classes,
                                                 metric = "ROC",
                                                 sampling="smote",
                                                 repeats=10,
                                                 path=SAVE_PATH,
                                                 nmtry=4,
                                                 ntree=1001,
                                                 nfolds=3,
                                                 ncrossrepeats = 5,
                                                 pro=0.8,
                                                 list_of_seeds = seeds)
all_genes_GSE20194[[2]]
mean(all_genes_GSE20194[[2]])

### AUC of 0.79

SAVE_PATH <- "~/projects/Taxol-Mo-Project/RF_Results/within_dataset/GSE20194/smote/curated/"

curated_genes_GSE20194 <- RandomForestUtils::Run_RF_Pipeline(feature_table = curated_GSE20194,
                                                 classes=GSE20194_classes$classes,
                                                 metric = "ROC",
                                                 sampling="smote",
                                                 repeats=100,
                                                 path=SAVE_PATH,
                                                 nmtry=4,
                                                 ntree=1001,
                                                 nfolds=3,
                                                 ncrossrepeats = 5,
                                                 pro=0.8,
                                                 list_of_seeds = seeds)
curated_genes_GSE20194[[2]]
mean(curated_genes_GSE20194[[2]])


```


## GSE25055

```{r}
SAVE_PATH <- "~/projects/Taxol-Mo-Project/RF_Results/within_dataset/GSE25055/smote/all_genes/"

#set up the seeds
set.seed(1995)
seeds <- sample.int(10000000, 1000)

#setup number of cores
RandomForestUtils::set_cores(40)

all_genes_GSE25055 <- RandomForestUtils::Run_RF_Pipeline(feature_table = GSE25055_exp,
                                                 classes=GSE25055_classes$classes,
                                                 metric = "ROC",
                                                 sampling="smote",
                                                 repeats=10,
                                                 path=SAVE_PATH,
                                                 nmtry=4,
                                                 ntree=1001,
                                                 nfolds=3,
                                                 ncrossrepeats = 5,
                                                 pro=0.8,
                                                 list_of_seeds = seeds)


mean(all_genes_GSE25055[[2]])


SAVE_PATH <- "~/projects/Taxol-Mo-Project/RF_Results/within_dataset/GSE25055/smote/curated/"

curated_genes_GSE25055 <- RandomForestUtils::Run_RF_Pipeline(feature_table = curated_GSE25055,
                                                 classes=GSE25055_classes$classes,
                                                 metric = "ROC",
                                                 sampling="smote",
                                                 repeats=10,
                                                 path=SAVE_PATH,
                                                 nmtry=4,
                                                 ntree=1001,
                                                 nfolds=3,
                                                 ncrossrepeats = 5,
                                                 pro=0.8,
                                                 list_of_seeds = seeds)




```